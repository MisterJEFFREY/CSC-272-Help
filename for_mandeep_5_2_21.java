/*******************************
* Jeffrey's Java Short Script For MJC classmate
* CSCI 272
* 
* You can run this code at: https://www.jdoodle.com/online-java-compiler/
* HELP SRCS: 
* https://stackoverflow.com/questions/28970799/how-to-create-a-array-with-n-random-integers/44487538
* https://www.w3schools.com/java/java_arraylist.asp
* 
*******************************/
/////////////////////////////////////////////////////////////////////////////////
import java.util.ArrayList; // Needed to use array with randomly generated sizes.
/////////////////////////////////////////////////////////////////////////////////

public class Main {
    public static void main(String args[]) {
        //Initiliaze everything!
        boolean result = false;
        //Generate random value for dividing number.
        int min             = 2;
        int max             = 10;                                                           //Change if wanting different max #.
        int multiplier      = (int)Math.floor(Math.random()*((max*2)-(min)+1)+min);         //Fun multiplier!
        int div_num         = (int)Math.floor(Math.random()*((max*multiplier)-min+1)+min);  //Number to divide each array list element! This is intended to be much larger!
        int number          = (int)Math.floor(Math.random()*((max*1)-min+1)+min);           //Set intital random val from 2-10
        //Generate random values to influence the 1d int array list.
        int array_min       = 2;
        int array_max       = 10;
        int array_size      = (int)Math.floor(Math.random()*(array_max-array_min+1)+array_min);
        ArrayList<Integer> factorArray = new ArrayList<Integer>();
        //In case if array_size is = to array_min
        if (array_size == array_min){array_size++;}
        //Reuse the min max number vars....
        //And start populating the array list with random int values with increments of 10!
        for (int i = 0; i < array_size; i++){
            number          = (int)Math.floor(Math.random()*(max-min+1)+min);
            factorArray.add(number);
            min             = min + 10;
            max             = max + 10;
            //Prevent the dividing number in being smaller than any # in array list
            if (div_num < number) 
                {
                    int choose = (int) ( Math.random() * 2 + 1); // will return either 1 or 2
                    switch (choose)
                        {
                            case 1:
                                div_num = div_num + number;
                            case 2:
                                div_num = number;
                        }
                }
            //Uncomment next lines to see output working as intended.
            //System.out.println("Current Test Array index: " + i + 
            //"\nCurrent Array Index value is: " + number);
        }
        //Print out the randomly generated array list with all elements on 1 line
        //along with the generated dividing number.
        System.out.println("The generated array list is as follows: \n" + factorArray
        + "\n\nWe'll use this autogenerated dividing number for the works: " + div_num);
        
        ///Start dividing each array list element with the dividing number
        System.out.println("\n\nNow working...");
        for(int index = 0; index < factorArray.size(); index++)
            {
                int temp_num = 0;
                temp_num = (div_num % factorArray.get(index));
                //Uncomment next line to see the division remainder.
                //System.out.println("\nCurrent array list index is: " + index  + "\nCurrent modu val is: " + temp_num);
                if (temp_num > 0) 
                    {
                        result = false;
                        System.out.println("\nUh oh!" + "\nArray list index of " +  index + " didn't divide well!\nThis means that....");
                        break;
                        
                    }else{
                        result = true;
                    }
            }
        //////////////////////////////////////////////////////////////////
        ///Unsuccesful division with all array list elements
        if (result == false)
            {
                System.out.println("\nThe entire autogenerated array list is not fully divisible by the dividing number. \nSorry!\n\n\n\nTry again?");
            }
        ///Succesful division with all array list elements   
        if (result == true)
            {
                System.out.println("\nGood news!\n The entire autogenerated array list IS fully divisible by the dividing number. \nLet's celebrate!!");
            }
        
    /////////////////////////////END CLASS////////////////////////////
    }
/////////////////////////END OVERALL CLASS///////////////////////////////
}
